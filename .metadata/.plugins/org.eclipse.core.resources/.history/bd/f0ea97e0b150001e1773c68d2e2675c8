package lab.cse;
import java.util.*;
public class DijkstrasAlgoritm {
	static void shortest(int v, int cost[][], int dist[], int n) {
		boolean [] S = new boolean [10];
		int i, w, u, num;
		for(i=1;i<=n;i++) {
			S[i] = false;
			dist[i] = cost[v][i];
		}
		S[v] = true;
		dist[v] = 0;
		num = 2;
		while(num <= n) {
			u = choose(dist, S, n);
			S[u] = true;
			num++;
			for(w=1;w<=n;w++) {
				if((dist[u]+cost[u][w])<dist[w] && ! S[w])
					dist[w] = dist[w]+cost[u][w];
			}
		}
	}

	private static int choose(int[] dist, boolean[] s, int n) {
		int w, j = 0, min = 9999;
		for(w=1;w<=)
		return 0;
	}
}
